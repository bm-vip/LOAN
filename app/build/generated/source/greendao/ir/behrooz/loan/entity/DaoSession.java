package ir.behrooz.loan.entity;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ir.behrooz.loan.entity.CashtEntity;
import ir.behrooz.loan.entity.DebitCreditEntity;
import ir.behrooz.loan.entity.LoanEntity;
import ir.behrooz.loan.entity.PersonEntity;
import ir.behrooz.loan.entity.WalletEntity;

import ir.behrooz.loan.entity.CashtEntityDao;
import ir.behrooz.loan.entity.DebitCreditEntityDao;
import ir.behrooz.loan.entity.LoanEntityDao;
import ir.behrooz.loan.entity.PersonEntityDao;
import ir.behrooz.loan.entity.WalletEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cashtEntityDaoConfig;
    private final DaoConfig debitCreditEntityDaoConfig;
    private final DaoConfig loanEntityDaoConfig;
    private final DaoConfig personEntityDaoConfig;
    private final DaoConfig walletEntityDaoConfig;

    private final CashtEntityDao cashtEntityDao;
    private final DebitCreditEntityDao debitCreditEntityDao;
    private final LoanEntityDao loanEntityDao;
    private final PersonEntityDao personEntityDao;
    private final WalletEntityDao walletEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cashtEntityDaoConfig = daoConfigMap.get(CashtEntityDao.class).clone();
        cashtEntityDaoConfig.initIdentityScope(type);

        debitCreditEntityDaoConfig = daoConfigMap.get(DebitCreditEntityDao.class).clone();
        debitCreditEntityDaoConfig.initIdentityScope(type);

        loanEntityDaoConfig = daoConfigMap.get(LoanEntityDao.class).clone();
        loanEntityDaoConfig.initIdentityScope(type);

        personEntityDaoConfig = daoConfigMap.get(PersonEntityDao.class).clone();
        personEntityDaoConfig.initIdentityScope(type);

        walletEntityDaoConfig = daoConfigMap.get(WalletEntityDao.class).clone();
        walletEntityDaoConfig.initIdentityScope(type);

        cashtEntityDao = new CashtEntityDao(cashtEntityDaoConfig, this);
        debitCreditEntityDao = new DebitCreditEntityDao(debitCreditEntityDaoConfig, this);
        loanEntityDao = new LoanEntityDao(loanEntityDaoConfig, this);
        personEntityDao = new PersonEntityDao(personEntityDaoConfig, this);
        walletEntityDao = new WalletEntityDao(walletEntityDaoConfig, this);

        registerDao(CashtEntity.class, cashtEntityDao);
        registerDao(DebitCreditEntity.class, debitCreditEntityDao);
        registerDao(LoanEntity.class, loanEntityDao);
        registerDao(PersonEntity.class, personEntityDao);
        registerDao(WalletEntity.class, walletEntityDao);
    }
    
    public void clear() {
        cashtEntityDaoConfig.clearIdentityScope();
        debitCreditEntityDaoConfig.clearIdentityScope();
        loanEntityDaoConfig.clearIdentityScope();
        personEntityDaoConfig.clearIdentityScope();
        walletEntityDaoConfig.clearIdentityScope();
    }

    public CashtEntityDao getCashtEntityDao() {
        return cashtEntityDao;
    }

    public DebitCreditEntityDao getDebitCreditEntityDao() {
        return debitCreditEntityDao;
    }

    public LoanEntityDao getLoanEntityDao() {
        return loanEntityDao;
    }

    public PersonEntityDao getPersonEntityDao() {
        return personEntityDao;
    }

    public WalletEntityDao getWalletEntityDao() {
        return walletEntityDao;
    }

}
